{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","todo","setTodo","valueInput","setValueInput","className","action","type","value","onChange","e","target","id","htmlFor","onClick","preventDefault","addedTodo","Date","now","passed","map","todoItem","index","Checkbox","newTodo","checkedTodo","style","cursor","idTodo","filter","todoObj","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAOe,SAASA,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAoCA,OACE,qBAAKC,UAAU,cAAf,SACE,sBAAKA,UAAU,cAAf,UACE,sBAAMC,OAAO,GAAb,SACA,sBAAKD,UAAU,aAAf,UACE,uBAAOE,KAAK,OACVC,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAON,EAAcM,EAAEC,OAAOH,QACxCI,GAAG,QACHP,UAAU,aAEd,uBAAOQ,QAAQ,QAAf,2GACA,wBAAQC,QA7CE,SAACJ,GACfA,EAAEK,iBAEF,IAAMC,EAAY,CAChBJ,GAAIK,KAAKC,MACTf,aACAgB,QAAQ,GAEV,GAA0B,KAAvBH,EAAUb,WACX,OAAO,KAEPD,EAAQ,GAAD,mBAAKD,GAAL,CAAWe,KAClBZ,EAAc,KAiCcC,UAAU,MAApC,oBAMEJ,EAAOA,EAAKmB,KAAI,SAACC,EAASC,GACxB,OACE,sBAAwBjB,UAAU,UAAlC,UACA,cAACkB,EAAA,EAAD,CAAUT,QAAS,kBA/Bb,SAACQ,GACjB,IAAME,EAAQ,YAAIvB,IACS,IAAxBuB,EAAQF,GAAOH,OAChBK,EAAQF,GAAOH,QAAO,GACS,IAAxBK,EAAQF,GAAOH,SACtBK,EAAQF,GAAOH,QAAO,GAExBjB,EAAQsB,GAwByBC,CAAYH,MAEjC,qBAAKjB,WAAgC,IAArBJ,EAAKqB,GAAOH,OAAc,6BAA6B,YAAvE,SAAqFE,EAASlB,aAE9F,cAAC,IAAD,CAAmBuB,MAAO,CAACC,OAAO,WAAcb,QAAS,kBAtCnDc,EAsCoEP,EAAST,QArC/FV,EAAQD,EAAK4B,QAAO,SAAAC,GAAO,OAAIA,EAAQlB,KAAOgB,MAD7B,IAACA,OAiCEP,EAAST,OASlB,oDC1Ef,IAYemB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a6fe5ceb.chunk.js","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport './App.css'\nimport { Checkbox } from '@mui/material'\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\n\n\nexport default function App() {\n  const [todo, setTodo] = useState([])\n  const [valueInput, setValueInput] = useState('')\n\n\n  const addTodo = (e) => {\n    e.preventDefault()\n\n    const addedTodo = {\n      id: Date.now(),\n      valueInput,\n      passed: false\n    }\n    if(addedTodo.valueInput===''){\n      return null \n    }else{\n      setTodo([...todo, addedTodo])\n      setValueInput('')\n    }\n    \n   \n  \n  }\n  \n\n  const removeTodo = (idTodo) => {\n    setTodo(todo.filter(todoObj => todoObj.id !== idTodo))\n  }\n  const checkedTodo=(index)=>{\n    const newTodo=[...todo]\n    if(newTodo[index].passed===true){\n      newTodo[index].passed=false\n    }else if(newTodo[index].passed===false){\n      newTodo[index].passed=true\n    }\n    setTodo(newTodo)\n  }\n  \n  return (\n    <div className='wrapperTodo'>\n      <div className=\"todoContent\">\n        <form action=\"\">\n        <div className='inputLabel'>\n          <input type=\"text\"\n            value={valueInput}\n            onChange={(e) => setValueInput(e.target.value)}\n            id='input'\n            className='vvodTodo'\n          />\n        <label htmlFor=\"input\">Что нужно сделать?</label>\n        <button onClick={addTodo} className='btn'>+</button>\n\n        </div>\n           \n        </form>\n        {\n          todo ? todo.map((todoItem,index) => {\n            return (\n              <div key={todoItem.id}  className='todoArr' >\n              <Checkbox onClick={()=>checkedTodo(index)}/>\n                \n                <div className={todo[index].passed===true?'todoValue todoValueChecked':'todoValue'}>{todoItem.valueInput}</div>\n              \n                <DeleteOutlineIcon style={{cursor:'pointer',}}  onClick={() => removeTodo(todoItem.id)} />\n              </div>\n            )\n\n          }) : <> emprty</>\n        }\n      </div>\n     \n\n\n    </div> \n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}